function [Kout] = explore_in_phi(Kin, outdirbase,phis)
%function [Kout] = fca.mmp.Context.explore_in_phi(Kin, outdirbase,phis)
%
% A function to obtain the series of structural contexts of a maxplus
% context by sweeping with the phi parameter. 
%
%Remember that the exploration for Inf (full standard incidence, 1 concept)
%and -Inf (empty standard incidence, 2 concepts) is never carried out.
%
%INPUTS:
%
% [Kin]: an input context to be analyzed
% - [outdirbase]: is the folder for the CVS descriptions of the structural
%lattices the CVS files are named after their phi values. This is built as:
% [outdirbase,'_',Kout.Name]
% - [ignoreperfect] is a flag. If true, those symbols classified correctly will
%be ignored
% - [mask] is the perfect classification matrix
% - [phis] this is the set of phi values to explore: use it carefully or
% you will never end exploring!
%

%OUTPUTS:
%
%[Kout] is the output *phi-explore* context, i.e. all structural lattices
%have been explored and are attached to it in [Kout.Ks]
%[Kout.Phis] holds the phi values coindexed with the [Kout.Ks].
%[Kout.ncnl] holds the number of concepts: [Kout.ncnl(i)] is
%the number of concepts of structural context Kout.Ks(i)


%TODO: check out whether we use mat2csv to find out the number of concepts
%or directly another concept-forming primitive like concepts!

%% Preprocess data
error(nargchk(1, 3, nargin));
% 1)  Prepare output context
Kout = Kin;
if Kout.explored%Do nothing if context is already explored.
    warning('mmp:fca:Context:structural','Context fully explored already');
%    Kout = Kin;
    return%Kout
% Clarify the context in case it is needed.
% elseif ~Kin.clarified
%     Kout = clarify(Kin);
% else
%     Kout=Kin;
end

% Proccess input parameters
if nargin<3%context, and maybe outdirbase no step parameters: Compute the grid for the sweep
    if nargin < 2%only context provided
        outdirbase='.';%write in this dir.
    end
    %if the step is not an input variable
    %compute the phis as the steps.
    qR = get_virtual_incidence(Kin);
%     qR=Kin.R(Kin.iG,Kin.iM);%Select those parts of the matrix to be evaluated.
%     ~all(all(qR==Inf)) || error('All meaningful R values are Inf!');
%     ~all(all(qR==-Inf)) || error('All meaningful R values are -Inf!');
    Kout.Phis=unique(qR);%Only sweep unique values
    Kout.Phis=Kout.Phis(~isinf(Kout.Phis));%Do not explore -Inf, Inf
    % NOTE: That means that the 1-concept lattice generated by -Inf and the 
    %2-concept lattice generated by Inf are never explored by this
    %procedure.
%     %phis=sort(Kin.R(:))';%Transform into row of values
%     %phis=phis(find(diff(phis)));%only sweep unique values
%     %phis=[-Inf phis(~isinf(phis))];%only explore -Inf once, Inf never.
else%context, outdirbase and step parameter provided
    warning('fca:mmp:Context:explore_in_phi', 'Providing your own step for the sweep is deprecated. Use it at your own risk!');
    Kout.Phis=phis;
end

 % 2) Postprocess input information
 % Create outputdirectory by attaching context name to base outdirbase should be checked
 outdir=[outdirbase, '/', Kin.Name,'/'];
 [suc,msg]=mkdir(outdir);
 if ~suc
     error('kfca:mmp:Context:explore_in_phi',msg);
 end
%define number of phis to sweep
nphis=length(Kout.Phis);
%Make space for concept counts and structural contexts.
Kout.nc=zeros(nphis,1);
Kout.Ks=cell(1,nphis);

%% Actual exploration: Explore first phi
NotUserProvidedStep = (nargin < 3);
%Remember the exploration for:
% Inf (full standard matrix, 1 concept) and
% -Inf (empty standard incidence, 2 concepts) is never carried out.
thisKs=structural(Kout,Kout.Phis(1));%Create structural context
mat2csv(thisKs, outdir);%Output context to a file
A=concepts(thisKs);%get only the extents
Kout.Ks{1}=thisKs;%store concept coindexed with Phis
Kout.nc(1)=size(A,2);%Store num. concepts coindexed with Phis, Ks
% if Kout.nc(1) == 0
%     error('fca:mmp:Context:explore_in_phi','Reticulo conceptual vacío!');
% end
% if ignoreperfect
%     %Delete the phonemes correcty classified
%     Kout.Ks{1}=ignore_perfect(Kout.Ks{1}, mask);
%     eperfect_col=zeros(pm.nephones,1);
%     eperfect_col(Kout.Ks{1}.iG_conf)=1;
%     eperfect=[eperfect, eperfect_col];
% end
% 
%% Explore the rest of the degrees
lastK=1;
[lastg,lastm]=size(thisKs);
for step=2:nphis
    %Stack struct context coindexed with phi
    thisKs=structural(Kout, Kout.Phis(step));%create structural contex
    [thisg,thism]=size(thisKs);
    %Only output the files different from the previous analysis: this is
    %mostly done when the step is provided by the user.
    %if find((Kout.Ks{end}.I - Kout.Ks{end-1}.I)~=0)%improve
    %    if any(any(get_virtual_incidence(thisK) ~= Kout.Ks{step-1}.I))
    if NotUserProvidedStep || (lastg ~= thisg) || (lastm ~= thism) || ...
            any(any(get_virtual_incidence(thisKs) ~= get_virtual_incidence(Kout.Ks{lastK})))
        mat2csv(thisKs, outdir);%Output context to csv file
        A=concepts(thisKs);%get extents
        Kout.Ks{step}=thisKs;%store concept coindexed with Phis
        Kout.nc(step)=size(A,2);%Stack num. concepts coindexed with Phis, Ks
        lastK=step;%update the last different context.
        lastg=thisg;
        lastm=thism;
%         if Kout.nc(step)<1%This cannot ever happen!
%             error('fca:mmp:Context:explore_in_phi','Reticulo conceptual vacío!');
%         end
    else%If incidences are just the same, do not repeat calculations
        Kout.nc(step)=Kout.nc(step-1);
        %FVA TODO: instead of saving them, why not say that you have to to down
        %in step until getting the context?
    end
end
%flag as explored
Kout.explored=true;
return%Kout
